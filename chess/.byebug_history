q
possible_moves
n
c
q
@pos
pos
s
n
display diff
diff
n
diff
possible_moves
n
s
c
q
pos
self.pos
self
pos
s
q
pos
s
dy
dx
s
diff
move_diff
s
c
s
board.valid_move?(pos)
pos
s
c
pos
board.valid_move?(pos)
s
c
pos
s
q
[].concat([1,2,3])
possible
n
s
c
pos
s
c
board.valid_move?(pos)
board.valid_moves?(pos)
pos
s
c
in_bounds?(pos)
pos
s
pos
s
c
is_null?(pos)
in_bounds?(pos)
pos
s
pos
s
q
board[pos]
pos
board.valid_move?(pos)
board
board.valid_move?(pos)
pos
s
c
pos
s
q
n
board[pos]
board[pos] == board.null
pos
n
s
n
q
board[pos].class
board[pos]
board.null
board[pos] == board.null
board.valid_move?(pos)
pos
n
q
board.valid_move?(pos)
pos
s
n
c
q
board.empty?(pos)
pos
n
s
n
piece.pos
piece.color
piece
c
s
piece
n
c
n
curr_player
s
possible
s
piece.valid_moves
n
color
n
piece.color
piece.class
piece.pos
piece
n
s
n
q
n
q
piece.valid_moves
n
piece.color
piece.board
piece.pos
self[[7,0]].class.superclass
self[[7,0]].class
self[[7,0]]
start_pos
piece
n
display color
display piece.color
q
end
